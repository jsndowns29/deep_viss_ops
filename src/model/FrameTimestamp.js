/**
 * DeepVISS OPS
 * DeepVISS (Deep Vision Interoperability Specification Standard) allows several computer vision solutions to produce, consume and exchange events in the same format.
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: office@deepviss.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FrameTimestamp model module.
 * @module model/FrameTimestamp
 * @version 1.3.0
 */
class FrameTimestamp {
    /**
     * Constructs a new <code>FrameTimestamp</code>.
     * @alias module:model/FrameTimestamp
     */
    constructor() { 
        
        FrameTimestamp.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FrameTimestamp</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FrameTimestamp} obj Optional instance to populate.
     * @return {module:model/FrameTimestamp} The populated <code>FrameTimestamp</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FrameTimestamp();

            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Date and time expressed according to ISO 8601 (e.g. 2018-06-24T23:10:28+03:00)
 * @member {String} value
 */
FrameTimestamp.prototype['value'] = undefined;

/**
 * @member {module:model/FrameTimestamp.ReferenceEnum} reference
 */
FrameTimestamp.prototype['reference'] = undefined;





/**
 * Allowed values for the <code>reference</code> property.
 * @enum {String}
 * @readonly
 */
FrameTimestamp['ReferenceEnum'] = {

    /**
     * value: "acquisition"
     * @const
     */
    "acquisition": "acquisition",

    /**
     * value: "reception"
     * @const
     */
    "reception": "reception",

    /**
     * value: "preprocessing"
     * @const
     */
    "preprocessing": "preprocessing",

    /**
     * value: "postprocessing"
     * @const
     */
    "postprocessing": "postprocessing"
};



export default FrameTimestamp;

